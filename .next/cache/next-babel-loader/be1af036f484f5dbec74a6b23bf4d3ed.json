{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\looey\\\\OneDrive\\\\Desktop\\\\projects\\\\site\\\\components\\\\Gallery.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport chunk from \"chunk\";\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nexport default function Gallery(props) {\n  var _this = this;\n\n  shuffle = function shuffle(a) {\n    for (var i = a.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref = [a[j], a[i]];\n      a[i] = _ref[0];\n      a[j] = _ref[1];\n    }\n\n    return a;\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, chunk(shuffle(props.images.map(function (i) {\n    return i.replace(\"public/\", \"\");\n  })) //remove public prefix\n  , Math.round(props.images.length / 5) //round to nearest image\n  ).slice(0, 5) //make sure there are only 5 columns\n  .map(function (column) {\n    return __jsx(\"div\", {\n      className: \"w-1/5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }\n    }, column.map(function (i) {\n      return __jsx(\"a\", {\n        href: i.replace(\"thumb.\", \"\"),\n        className: \"galleryLink\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, __jsx(LazyLoadImage, {\n        className: \"galleryImage\",\n        src: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      }));\n    }));\n  }));\n}\n_c = Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["C:/Users/looey/OneDrive/Desktop/projects/site/components/Gallery.jsx"],"names":["chunk","LazyLoadImage","Gallery","props","shuffle","a","i","length","j","Math","floor","random","images","map","replace","round","slice","column"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnCC,EAAAA,OAAO,GAAG,iBAACC,CAAD,EAAO;AACb,SAAK,IAAIC,CAAC,GAAGD,CAAC,CAACE,MAAF,GAAW,CAAxB,EAA2BD,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AADmC,iBAEpB,CAACD,CAAC,CAACG,CAAD,CAAF,EAAOH,CAAC,CAACC,CAAD,CAAR,CAFoB;AAElCD,MAAAA,CAAC,CAACC,CAAD,CAFiC;AAE5BD,MAAAA,CAAC,CAACG,CAAD,CAF2B;AAGtC;;AACD,WAAOH,CAAP;AACH,GAND;;AAOF,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,KAAK,CACCI,OAAO,CAACD,KAAK,CAACS,MAAN,CACHC,GADG,CACC,UAAAP,CAAC;AAAA,WAAIA,CAAC,CAACQ,OAAF,CAAU,SAAV,EAAqB,EAArB,CAAJ;AAAA,GADF,CAAD,CADR,CAGG;AAHH,IAIGL,IAAI,CAACM,KAAL,CAAWZ,KAAK,CAACS,MAAN,CAAaL,MAAb,GAAoB,CAA/B,CAJH,CAIqC;AAJrC,GAAL,CAMGS,KANH,CAMS,CANT,EAMY,CANZ,EAMe;AANf,GAOGH,GAPH,CAQA,UAACI,MAAD;AAAA,WACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,MAAM,CAACJ,GAAP,CAAW,UAAAP,CAAC;AAAA,aACf;AAAG,QAAA,IAAI,EAAEA,CAAC,CAACQ,OAAF,CAAU,QAAV,EAAoB,EAApB,CAAT;AAAkC,QAAA,SAAS,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACsB,MAAC,aAAD;AAAe,QAAA,SAAS,EAAC,cAAzB;AAAwC,QAAA,GAAG,EAAER,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtB,CADe;AAAA,KAAZ,CADF,CADD;AAAA,GARA,CADF,CADF;AAuBD;KA/BuBJ,O","sourcesContent":["import chunk from \"chunk\"\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nexport default function Gallery(props) {\r\n    shuffle = (a) => {\r\n        for (let i = a.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [a[i], a[j]] = [a[j], a[i]];\r\n        }\r\n        return a;\r\n    }\r\n  return (\r\n    <div className=\"flex\">\r\n    \t{chunk(\r\n            shuffle(props.images\r\n                .map(i => i.replace(\"public/\", \"\"))\r\n            ) //remove public prefix\r\n            , Math.round(props.images.length/5) //round to nearest image\r\n        )\r\n        .slice(0, 5) //make sure there are only 5 columns\r\n        .map(\r\n    \t\t(column) => (\r\n    \t\t\t<div className=\"w-1/5\">\r\n    \t\t\t\t{column.map(i => (\r\n\t\t\t\t\t\t<a href={i.replace(\"thumb.\", \"\")} className=\"galleryLink\">\r\n                            <LazyLoadImage className=\"galleryImage\" src={i}/>\r\n                        </a>\r\n    \t\t\t\t))}\r\n    \t\t\t</div>\r\n    \t\t)\r\n    \t)\r\n\t\t}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}