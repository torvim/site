{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\looey\\\\OneDrive\\\\Desktop\\\\site\\\\pages\\\\blog\\\\index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fs from \"fs\";\nimport matter from \"gray-matter\";\nexport default function Home({\n  posts\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, posts.map(({\n    frontmatter: {\n      title,\n      description,\n      date\n    }\n  }) => __jsx(\"article\", {\n    key: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, date)), __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, description)))));\n}\nexport async function getStaticProps() {\n  const files = fs.readdirSync(`${process.cwd()}/blog`);\n  const posts = files.map(filename => {\n    const markdownWithMetadata = fs.readFileSync(`content/posts/${filename}`).toString();\n    const {\n      data\n    } = matter(markdownWithMetadata); // Convert post date to format: Month day, Year\n\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    const formattedDate = data.date.toLocaleDateString(\"en-US\", options);\n\n    const frontmatter = _objectSpread(_objectSpread({}, data), {}, {\n      date: formattedDate\n    });\n\n    return {\n      slug: filename.replace(\".md\", \"\"),\n      frontmatter\n    };\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/looey/OneDrive/Desktop/site/pages/blog/index.jsx"],"names":["fs","matter","Home","posts","map","frontmatter","title","description","date","getStaticProps","files","readdirSync","process","cwd","filename","markdownWithMetadata","readFileSync","toString","data","options","year","month","day","formattedDate","toLocaleDateString","slug","replace","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AACtC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,KAAK,CAACC,GAAN,CAAU,CAAC;AAAEC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB;AAAf,GAAD,KACV;AAAS,IAAA,GAAG,EAAEF,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,IAAP,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,WAAJ,CADF,CALF,CADA,CADJ,CADF;AAeD;AAED,OAAO,eAAeE,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGV,EAAE,CAACW,WAAH,CAAgB,GAAEC,OAAO,CAACC,GAAR,EAAc,OAAhC,CAAd;AAEA,QAAMV,KAAK,GAAGO,KAAK,CAACN,GAAN,CAAWU,QAAD,IAAc;AACpC,UAAMC,oBAAoB,GAAGf,EAAE,CAC5BgB,YAD0B,CACZ,iBAAgBF,QAAS,EADb,EAE1BG,QAF0B,EAA7B;AAIA,UAAM;AAAEC,MAAAA;AAAF,QAAWjB,MAAM,CAACc,oBAAD,CAAvB,CALoC,CAOpC;;AACA,UAAMI,OAAO,GAAG;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,MAA1B;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAAhB;AACA,UAAMC,aAAa,GAAGL,IAAI,CAACV,IAAL,CAAUgB,kBAAV,CAA6B,OAA7B,EAAsCL,OAAtC,CAAtB;;AAEA,UAAMd,WAAW,mCACZa,IADY;AAEfV,MAAAA,IAAI,EAAEe;AAFS,MAAjB;;AAKA,WAAO;AACLE,MAAAA,IAAI,EAAEX,QAAQ,CAACY,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CADD;AAELrB,MAAAA;AAFK,KAAP;AAID,GApBa,CAAd;AAsBA,SAAO;AACLsB,IAAAA,KAAK,EAAE;AACLxB,MAAAA;AADK;AADF,GAAP;AAKD","sourcesContent":["import fs from \"fs\";\r\nimport matter from \"gray-matter\";\r\n\r\nexport default function Home({ posts }) {\r\n  return (\r\n    <div>\r\n       {posts.map(({ frontmatter: { title, description, date } }) => (\r\n        <article key={title}>\r\n          <header>\r\n            <h3>{title}</h3>\r\n            <span>{date}</span>\r\n          </header>\r\n          <section>\r\n            <p>{description}</p>\r\n          </section>\r\n        </article>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const files = fs.readdirSync(`${process.cwd()}/blog`);\r\n\r\n  const posts = files.map((filename) => {\r\n    const markdownWithMetadata = fs\r\n      .readFileSync(`content/posts/${filename}`)\r\n      .toString();\r\n\r\n    const { data } = matter(markdownWithMetadata);\r\n\r\n    // Convert post date to format: Month day, Year\r\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    const formattedDate = data.date.toLocaleDateString(\"en-US\", options);\r\n\r\n    const frontmatter = {\r\n      ...data,\r\n      date: formattedDate,\r\n    };\r\n\r\n    return {\r\n      slug: filename.replace(\".md\", \"\"),\r\n      frontmatter,\r\n    };\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}