{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\looey\\\\OneDrive\\\\Desktop\\\\projects\\\\site\\\\components\\\\Gallery.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport chunk from \"chunk\";\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nexport default function Gallery(props) {\n  shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, chunk(props.images.map(i => i.replace(\"public/\", \"\")) //remove public prefix\n  , Math.round(props.images.length / 5) //round to nearest image\n  ).slice(0, 5) //make sure there are only 5 columns\n  .map(column => __jsx(\"div\", {\n    className: \"w-1/5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }, column.map(i => __jsx(\"a\", {\n    href: i.replace(\"thumb.\", \"\"),\n    className: \"galleryLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(LazyLoadImage, {\n    className: \"galleryImage\",\n    src: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/looey/OneDrive/Desktop/projects/site/components/Gallery.jsx"],"names":["chunk","LazyLoadImage","Gallery","props","shuffle","a","i","length","j","Math","floor","random","images","map","replace","round","slice","column"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACnCC,EAAAA,OAAO,GAAIC,CAAD,IAAO;AACb,SAAK,IAAIC,CAAC,GAAGD,CAAC,CAACE,MAAF,GAAW,CAAxB,EAA2BD,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,OAACD,CAAC,CAACC,CAAD,CAAF,EAAOD,CAAC,CAACG,CAAD,CAAR,IAAe,CAACH,CAAC,CAACG,CAAD,CAAF,EAAOH,CAAC,CAACC,CAAD,CAAR,CAAf;AACH;;AACD,WAAOD,CAAP;AACH,GAND;;AAOF,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,KAAK,CACCG,KAAK,CAACS,MAAN,CACKC,GADL,CACSP,CAAC,IAAIA,CAAC,CAACQ,OAAF,CAAU,SAAV,EAAqB,EAArB,CADd,CADD,CAEyC;AAFzC,IAGGL,IAAI,CAACM,KAAL,CAAWZ,KAAK,CAACS,MAAN,CAAaL,MAAb,GAAoB,CAA/B,CAHH,CAGqC;AAHrC,GAAL,CAKGS,KALH,CAKS,CALT,EAKY,CALZ,EAKe;AALf,GAMGH,GANH,CAOCI,MAAD,IACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,MAAM,CAACJ,GAAP,CAAWP,CAAC,IACf;AAAG,IAAA,IAAI,EAAEA,CAAC,CAACQ,OAAF,CAAU,QAAV,EAAoB,EAApB,CAAT;AAAkC,IAAA,SAAS,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACsB,MAAC,aAAD;AAAe,IAAA,SAAS,EAAC,cAAzB;AAAwC,IAAA,GAAG,EAAER,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,CADG,CADF,CARD,CADF,CADF;AAsBD","sourcesContent":["import chunk from \"chunk\"\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nexport default function Gallery(props) {\r\n    shuffle = (a) => {\r\n        for (let i = a.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [a[i], a[j]] = [a[j], a[i]];\r\n        }\r\n        return a;\r\n    }\r\n  return (\r\n    <div className=\"flex\">\r\n    \t{chunk(\r\n            props.images\r\n                .map(i => i.replace(\"public/\", \"\")) //remove public prefix\r\n            , Math.round(props.images.length/5) //round to nearest image\r\n        )\r\n        .slice(0, 5) //make sure there are only 5 columns\r\n        .map(\r\n    \t\t(column) => (\r\n    \t\t\t<div className=\"w-1/5\">\r\n    \t\t\t\t{column.map(i => (\r\n\t\t\t\t\t\t<a href={i.replace(\"thumb.\", \"\")} className=\"galleryLink\">\r\n                            <LazyLoadImage className=\"galleryImage\" src={i}/>\r\n                        </a>\r\n    \t\t\t\t))}\r\n    \t\t\t</div>\r\n    \t\t)\r\n    \t)\r\n\t\t}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}